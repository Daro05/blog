{
  
    
        "post0": {
            "title": "Title",
            "content": "&gt; &quot;Análisis Exploratorio Hoteles CDMX&quot; - toc:true- branch: master - badges: true - comments: true - author: Daniel Rodriguez - categories: [fastpages, jupyter] . import os import pandas as pd import numpy as np import matplotlib.pyplot as plt import matplotlib.image as mpimg import seaborn as sns import folium import geopandas as gpd import json import re %matplotlib notebook %matplotlib inline pd.set_option(&#39;display.max_columns&#39;, None) . conce_bren = pd.read_csv(&#39;/Users/daniel.rodriguez/Documents/HOTELES CDMX/BASES PROCESADAS/base1819_bren.csv&#39;,sep = &#39;,&#39;, encoding = &#39;utf-8&#39;,header = 0, index_col =False) conce_bren[&#39;NOMBRE_HOTEL&#39;]=conce_bren[&#39;NOMBRE_HOTEL&#39;].str.strip() #conce_bren[&#39;PRC_OCUP&#39;]=conce_bren[&#39;PRC_OCUP&#39;].astype(float) conce_bren.head() . NOMBRE_HOTEL RTCDMX ZONA_TURISTICA CATEGORIA FECHA SEMANA DIAS_SEM DIAS_MES MES MES_NUM AÑO CO CD PRC_OCUP TARIFA_PROMEDIO CAT_Zonas_ bool . 0 Hotel Camino Real Polanco Mexico | 433 | Chapultepec-Polanco | 5.0 | 31/12/17 | 52 | DOMINGO | 31 | DICIEMBRE | 12 | 2017 | 420.0 | 712.0 | 0.589888 | NaN | Chapultepec-Polanco | True | . 1 Hotel Royal Pedregal | 7474 | Perisur-Ajusco | 5.0 | 31/12/17 | 52 | DOMINGO | 31 | DICIEMBRE | 12 | 2017 | 45.0 | 317.0 | 0.141956 | 1067.0 | Perisur-Ajusco | True | . 2 Filadelfia Suites Hotel Boutique | 5341 | W.T.C.-San Angel-C.U. | 5.0 | 31/12/17 | 52 | DOMINGO | 31 | DICIEMBRE | 12 | 2017 | 4.0 | 21.0 | 0.190476 | 0.0 | W.T.C.-San Angel-C.U. | True | . 3 Sheraton Maria Isabel Hotel &amp; Towers | 350 | Torre Mayor-Zona Rosa | 5.0 | 31/12/17 | 52 | DOMINGO | 31 | DICIEMBRE | 12 | 2017 | 636.0 | 755.0 | 0.842384 | 1960.0 | Torre Mayor-Zona Rosa | True | . 4 Hotel Fiesta Americana Grand Chapultepec | 7469 | Chapultepec-Polanco | 5.0 | 31/12/17 | 52 | DOMINGO | 31 | DICIEMBRE | 12 | 2017 | 170.0 | 203.0 | 0.837438 | 1889.0 | Chapultepec-Polanco | True | . conce_bren.info() . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; RangeIndex: 59941 entries, 0 to 59940 Data columns (total 17 columns): NOMBRE_HOTEL 59941 non-null object RTCDMX 59941 non-null int64 ZONA_TURISTICA 59941 non-null object CATEGORIA 59913 non-null float64 FECHA 59941 non-null object SEMANA 59941 non-null int64 DIAS_SEM 59941 non-null object DIAS_MES 59941 non-null int64 MES 59941 non-null object MES_NUM 59941 non-null int64 A√ëO 59941 non-null int64 CO 59249 non-null float64 CD 59440 non-null float64 PRC_OCUP 58210 non-null float64 TARIFA_PROMEDIO 56411 non-null float64 CAT_Zonas_ 59941 non-null object bool 59941 non-null bool dtypes: bool(1), float64(5), int64(5), object(6) memory usage: 7.4+ MB . conce_bren.CAT_Zonas_.unique() . array([&#39;Chapultepec-Polanco&#39;, &#39;Perisur-Ajusco&#39;, &#39;W.T.C.-San Angel-C.U.&#39;, &#39;Torre Mayor-Zona Rosa&#39;, &#39;Condesa-Roma&#39;, &#39;Centro Historico-Alameda&#39;, &#39;Norte-Basilica de Guadalupe&#39;, &#39;Tlalpan-Taxquena&#39;, &#39;Coyoacan-Xoco-Atoyac&#39;, &#39;Santa Fe-Desierto de los Leones&#39;, &#39;Aeropuerto-Foro Sol&#39;, &#39;Iztapalapa-Central de Abasto&#39;], dtype=object) . &#191;Cuantos hoteles hay por zona en la muestra? . conce_g = conce_bren.groupby([&#39;CAT_Zonas_&#39;,&#39;NOMBRE_HOTEL&#39;,&#39;RTCDMX&#39;]).count() conce_g = conce_g.reset_index() lista_zonas = [&#39;Chapultepec-Polanco&#39;, &#39;Perisur-Ajusco&#39;, &#39;W.T.C.-San Angel-C.U.&#39;, &#39;Torre Mayor-Zona Rosa&#39;, &#39;Condesa-Roma&#39;, &#39;Centro Historico-Alameda&#39;, &#39;Norte-Basilica de Guadalupe&#39;, &#39;Tlalpan-Taxquena&#39;, &#39;Coyoacan-Xoco-Atoyac&#39;, &#39;Santa Fe-Desierto de los Leones&#39;, &#39;Aeropuerto-Foro Sol&#39;, &#39;Iztapalapa-Central de Abasto&#39;] for i in lista_zonas: print(i+&quot; &quot;+str(len(conce_g[conce_g[&#39;CAT_Zonas_&#39;]==i]))) . Chapultepec-Polanco 11 Perisur-Ajusco 15 W.T.C.-San Angel-C.U. 20 Torre Mayor-Zona Rosa 37 Condesa-Roma 5 Centro Historico-Alameda 17 Norte-Basilica de Guadalupe 14 Tlalpan-Taxquena 5 Coyoacan-Xoco-Atoyac 3 Santa Fe-Desierto de los Leones 9 Aeropuerto-Foro Sol 7 Iztapalapa-Central de Abasto 2 . conce_g.head() . CAT_Zonas_ NOMBRE_HOTEL RTCDMX ZONA_TURISTICA CATEGORIA FECHA SEMANA DIAS_SEM DIAS_MES MES MES_NUM A√ëO CO CD PRC_OCUP TARIFA_PROMEDIO bool . 0 Aeropuerto-Foro Sol | Holiday Inn Express Aeropuerto CDMX | 5524 | 582 | 582 | 582 | 582 | 582 | 582 | 582 | 582 | 582 | 582 | 582 | 582 | 576 | 582 | . 1 Aeropuerto-Foro Sol | Hotel Fiesta Inn Aeropuerto | 540 | 582 | 582 | 582 | 582 | 582 | 582 | 582 | 582 | 582 | 580 | 580 | 580 | 575 | 582 | . 2 Aeropuerto-Foro Sol | Hotel Hilton Aeropuerto Ciudad de Mexico | 627 | 582 | 582 | 582 | 582 | 582 | 582 | 582 | 582 | 582 | 582 | 582 | 582 | 564 | 582 | . 3 Aeropuerto-Foro Sol | Hotel Riazor | 604 | 21 | 21 | 21 | 21 | 21 | 21 | 21 | 21 | 21 | 21 | 21 | 21 | 21 | 21 | . 4 Aeropuerto-Foro Sol | NH Aeropuerto T2 Mexico | 5309 | 365 | 365 | 365 | 365 | 365 | 365 | 365 | 365 | 365 | 365 | 365 | 365 | 359 | 365 | . url = (&#39;/Users/daniel.rodriguez/Documents/Hoteles CDMX/SHP_ZONAS_BREN/hoteles_04092019.shp&#39;) zona_bren = gpd.read_file(url) zona_bren.head() . OBJECTID Join_Count TARGET_FID ID_BASECOM RTCDMX RNT RFC RTCDMX1 NOMBRE_COM RAZoN_SOCI ENCARGADO CATEGORiA TIPO_DE_ES HABITACION CATEGORiA1 DOMICILIO COLONIA DELEGACIoN CODIGO_POS y x ZONA_TURiS TELeFONO_1 TELeFONO_2 Distintivo Moderniza Otra Salones Capacidad Salas_de_J Capacidad1 Spa Gym Capacidade Restaurant Bar Alberca Jacuzzi Lobby_Bar Cafeteria Estacionam Valet_Park TV_Cable Taxi Guia_de_Tu Arrendador Aire_Acond Centro_Eje Agencia_de Room_Servi Servivbar Caja_de_Se Cambio_de Boutique Floreria Tabaqueria Lavanderia Estetica Renta_de_P Servicio_M Secretaria NiÃ±era Juegos_Inf Tienda_de Campo_de_G Cancha_de Squash Grupo_de_a Habitaci_1 Acceso_p_ OBJECTID_1 CVE_ENT CVE_MUN NOM_MUN Shape_Leng CAT_Zonas_ geometry . 0 1 | 1 | 1 | 1.0 | 5.0 | 0.000000e+00 | HPA820301IF0 | 5.0 | Hotel NH Collection Mexico City Reforma | HOTELERA DE LA PARRA S.A. DE C.V. | Fernando Rivera | 4 Estrellas | Hotel | 306.0 | 4 Estrellas | Liverpool 155 | Juarez | Cuauhtemoc | 6600.0 | 19.424151 | -99.165004 | Torre Mayor - Zona Rosa | 52289928.0 | 0.0 | 1.0 | 0.0 | 0.0 | 3.0 | 250.0 | 2.0 | 50.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1 | 09 | 015 | Cuauht moc | 24394.842028 | Torre Mayor - Zona Rosa | POINT (-99.16500399820507 19.42415100336075) | . 1 2 | 1 | 2 | 2.0 | 28.0 | 1.090151e+09 | GHE0809221L7 | 28.0 | Hotel El Salvador | GRUPO HOTEL EL SALVADOR S.A. DE C.V. | Manuel Ojeda Valle | 3 Estrellas | Hotel | 93.0 | 3 Estrellas | Republica de El Salvador 16 | Centro (area 8) | Cuauhtemoc | 6080.0 | 19.430475 | -99.140571 | Centro Historico - Alameda | 55211008.0 | 55212160.0 | 0.0 | 1.0 | 0.0 | 1.0 | 100.0 | 1.0 | 50.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 2 | 09 | 015 | Cuauht moc | 24394.842028 | Centro Historico - Alameda | POINT (-99.14057100005448 19.43047500588) | . 2 3 | 1 | 3 | 3.0 | 32.0 | 1.090151e+09 | HMR690407KW7 | 32.0 | City Express Alameda | HOTEL MONTE REAL, S.A. DE C.V. | None | 4 Estrellas | Hotel | 112.0 | 4 Estrellas | Revillagigedo 23 | Centro (area 5) | Cuauhtemoc | 6050.0 | 19.433215 | -99.146393 | Centro Historico - Alameda | 50178900.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 80.0 | 1.0 | 50.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 3 | 09 | 015 | Cuauht moc | 24394.842028 | Centro Historico - Alameda | POINT (-99.14639299921691 19.43321500346065) | . 3 4 | 1 | 4 | 4.0 | 41.0 | 1.090151e+09 | LER370323UV5 | 41.0 | Hotel Maria Cristina | LERMA S.A. | Marco Antonio Cossio Gonzalez | 4 Estrellas | Hotel | 150.0 | 4 Estrellas | Rio Lerma 31 | Cuauhtemoc | Cuauhtemoc | 6500.0 | 19.431644 | -99.163342 | Torre Mayor - Zona Rosa | 55669688.0 | 57031212.0 | 1.0 | 0.0 | 0.0 | 2.0 | 180.0 | 1.0 | 10.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 4 | 09 | 015 | Cuauht moc | 24394.842028 | Torre Mayor - Zona Rosa | POINT (-99.16334199998528 19.4316440038383) | . 4 5 | 1 | 5 | 5.0 | 42.0 | 0.000000e+00 | HAN6611072H2 | 42.0 | Hotel Del angel | COMPAÃIA HOTELERA DEL aNGEL S.A. DE C.V. | Laura Cortes | 4 Estrellas | Hotel | 100.0 | 4 Estrellas | Rio Lerma 154 | Cuauhtemoc | Cuauhtemoc | 6500.0 | 19.428442 | -99.168791 | Torre Mayor - Zona Rosa | 55331032.0 | 55331039.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 5 | 09 | 015 | Cuauht moc | 24394.842028 | Torre Mayor - Zona Rosa | POINT (-99.16879099607468 19.42844200134277) | . &#191;C&#243;mo es la distribuci&#243;n de habitaciones por hotel? . zona_bren.HABITACION.quantile([0.25, 0.5, 0.75]) . 0.25 38.0 0.50 58.0 0.75 96.0 Name: HABITACION, dtype: float64 . fig, ax = plt.subplots(figsize = (15, 10)) ax.hist(zona_bren.HABITACION, bins = 80, alpha = 0.3,color = &#39;blue&#39;, ec=&#39;aqua&#39;,linewidth=2, label = &#39;Número de Habitaciones&#39;) #ax.hist(pairs19.mean_travel_min19, bins = 50, alpha = 0.3,color = &#39;green&#39;, ec=&#39;aqua&#39;,linewidth=2, label = 2019) ax.set_ylabel(&#39;Frecuencia&#39;,fontsize = 14) ax.set_xlabel(&#39;Número de habitaciones&#39;, fontsize = 14) ax.spines[&quot;top&quot;].set_visible(False) ax.spines[&quot;right&quot;].set_visible(False) #plt.text(1500, 6167951.32, &quot;Col: Parque Ind. Eco. Leon/ Pob: 0/ Ventas: $6,167,951.32&quot;, horizontalalignment=&#39;left&#39;, size=&#39;medium&#39;, color=&#39;black&#39;, weight=&#39;semibold&#39;,fontsize = 12) #plt.text(20, 120, r&#39;N = 23,855, mean = 2.04, std = 4.973, max = 150, min = 1&#39;, fontsize=14) plt.title(&quot;Distribución Numero de Habitaciones&quot;, loc=&#39;left&#39;, fontsize=20, fontweight=0, color=&#39;darkred&#39;) plt.axvline(x=38, color = &#39;r&#39;) plt.text(38.1, 85,&#39;25%&#39;) plt.axvline(x=58, color = &#39;r&#39;) plt.text(59.5, 85,&#39;50%&#39;) plt.axvline(x=96, color = &#39;r&#39;) plt.text(96.1, 85,&#39;75%&#39;) ax.get_xaxis().tick_bottom() ax.get_yaxis().tick_left() ax.legend() fig.savefig(&#39;/Users/daniel.rodriguez/Documents/HOTELES CDMX/GRAPH/dist_habit.png&#39;, format = &#39;png&#39;, dpi = 300, bbox_inches = &quot;tight&quot;) . zona_bren[zona_bren[&#39;HABITACION&#39;]&gt;700] . OBJECTID Join_Count TARGET_FID ID_BASECOM RTCDMX RNT RFC RTCDMX1 NOMBRE_COM RAZoN_SOCI ENCARGADO CATEGORiA TIPO_DE_ES HABITACION CATEGORiA1 DOMICILIO COLONIA DELEGACIoN CODIGO_POS y x ZONA_TURiS TELeFONO_1 TELeFONO_2 Distintivo Moderniza Otra Salones Capacidad Salas_de_J Capacidad1 Spa Gym Capacidade Restaurant Bar Alberca Jacuzzi Lobby_Bar Cafeteria Estacionam Valet_Park TV_Cable Taxi Guia_de_Tu Arrendador Aire_Acond Centro_Eje Agencia_de Room_Servi Servivbar Caja_de_Se Cambio_de Boutique Floreria Tabaqueria Lavanderia Estetica Renta_de_P Servicio_M Secretaria NiÃ±era Juegos_Inf Tienda_de Campo_de_G Cancha_de Squash Grupo_de_a Habitaci_1 Acceso_p_ OBJECTID_1 CVE_ENT CVE_MUN NOM_MUN Shape_Leng CAT_Zonas_ geometry . 67 68 | 1 | 68 | 68.0 | 350.0 | 0.0 | HSH6905238BA | 350.0 | Sheraton Maria Isabel Hotel &amp; Towers | HOTELES SHERATON S.A. DE C.V. | Marcelo Moretti | 5 Estrellas | Hotel | 756.0 | 5 Estrellas | Paseo de la Reforma 325 | Cuauhtemoc | Cuauhtemoc | 6500.0 | 19.427920 | -99.167195 | Torre Mayor - Zona Rosa | 52425555.0 | 52424007.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 20.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 68 | 09 | 015 | Cuauht moc | 24394.842028 | Torre Mayor - Zona Rosa | POINT (-99.16719499696046 19.42792000435293) | . 72 73 | 1 | 73 | 73.0 | 433.0 | 0.0 | AHG130507626 | 433.0 | Hotel Camino Real Polanco Mexico | ADMINISTRADORA DE HOTELES GRT, S.A. DE C.V. | Norma Miranda Mondragon | 5 Estrellas | Hotel | 712.0 | 5 Estrellas | Calzada General Mariano Escobedo 700 | Anzures | Miguel Hidalgo | 11590.0 | 19.427734 | -99.179174 | Chapultepec - Polanco | 52638888.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 73 | 09 | 016 | Miguel Hidalgo | 39162.731389 | Chapultepec - Polanco | POINT (-99.17917400132865 19.42773400619626) | . 590 591 | 1 | 591 | 591.0 | 7471.0 | 0.0 | HHO900507844 | 7471.0 | Hyatt Regency Mexico City | HR MC HOTEL COMPANY S. DE R.L. DE C.V. | Thierry Guillot | 5 Estrellas | Hotel | 755.0 | 5 Estrellas | Campos Eliseos 204 | Polanco V seccion | Miguel Hidalgo | 11560.0 | 19.427437 | -99.192843 | Chapultepec - Polanco | 50831234.0 | 52838700.0 | 1.0 | 1.0 | 0.0 | 11.0 | 1370.0 | 2.0 | 40.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 0.0 | 1.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 1.0 | 1.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 1.0 | 1.0 | 1.0 | 591 | 09 | 016 | Miguel Hidalgo | 39162.731389 | Chapultepec - Polanco | POINT (-99.19284299947321 19.42743700183928) | . &#191;Cu&#225;ntos hoteles hay por zona totales? . zona_bren.CAT_Zonas_.unique() . array([&#39;Torre Mayor - Zona Rosa&#39;, &#39;Centro Historico - Alameda&#39;, &#39;Norte - Basilica de Guadalupe&#39;, &#39;Tlalpan - TaxqueÃ±a&#39;, &#39;Condesa - Zona Rosa&#39;, &#39;Chapultepec - Polanco&#39;, &#39;WTC - San Angel - CU&#39;, &#39;Aeropuerto - Foro Sol&#39;, &#39;Santa Fe - Desierto de los Leones&#39;, &#39;Iztapalapa - Central de Abastos&#39;, &#39;Perisur - Ajusco&#39;, &#39;Coyoacan&#39;, &#39;Xochimilco - Milpa Alta -Tlahuac&#39;, None], dtype=object) . zona_g = zona_bren.groupby([&#39;CAT_Zonas_&#39;,&#39;NOMBRE_COM&#39;,&#39;RTCDMX1&#39;]).count().reset_index() lista_zonas = [&#39;Torre Mayor - Zona Rosa&#39;, &#39;Centro Historico - Alameda&#39;, &#39;Norte - Basilica de Guadalupe&#39;, &#39;Tlalpan - TaxqueÃ±a&#39;, &#39;Condesa - Zona Rosa&#39;, &#39;Chapultepec - Polanco&#39;, &#39;WTC - San Angel - CU&#39;, &#39;Aeropuerto - Foro Sol&#39;, &#39;Santa Fe - Desierto de los Leones&#39;, &#39;Iztapalapa - Central de Abastos&#39;, &#39;Perisur - Ajusco&#39;, &#39;Coyoacan&#39;, &#39;Xochimilco - Milpa Alta -Tlahuac&#39;] for i in lista_zonas: print(i+&quot; &quot;+str(len(zona_g[zona_g[&#39;CAT_Zonas_&#39;]==i]))) . Torre Mayor - Zona Rosa 135 Centro Historico - Alameda 97 Norte - Basilica de Guadalupe 94 Tlalpan - TaxqueÃ±a 82 Condesa - Zona Rosa 33 Chapultepec - Polanco 28 WTC - San Angel - CU 41 Aeropuerto - Foro Sol 37 Santa Fe - Desierto de los Leones 14 Iztapalapa - Central de Abastos 20 Perisur - Ajusco 25 Coyoacan 4 Xochimilco - Milpa Alta -Tlahuac 7 . &#191;Qu&#233; porcentaje del total de hoteles por zona hay en la muestra? . dif_hot = pd.read_csv(&#39;/Users/daniel.rodriguez/Documents/HOTELES CDMX/BASES PROCESADAS/hotelestotvshoteles_muestra.csv&#39;,sep = &#39;,&#39;, encoding = &#39;utf-8&#39;,header = 0, index_col =False) dif_hot.head() dif_hot[&#39;prc_tot&#39;] = 1-dif_hot[&#39;prc_muestra&#39;] dif_hot[&#39;prc_muestra&#39;] = dif_hot[&#39;prc_muestra&#39;]*100 dif_hot[&#39;prc_tot&#39;] = dif_hot[&#39;prc_tot&#39;]*100 dif_hot . CAT_Zonas_ HOTELES_TOTALES HOTELES_MUESTRA prc_muestra prc_tot . 0 Chapultepec - Polanco | 28 | 11 | 39.285714 | 60.714286 | . 1 Perisur - Ajusco | 25 | 15 | 60.000000 | 40.000000 | . 2 W.T.C. - San Angel - C.U. | 41 | 20 | 48.780488 | 51.219512 | . 3 Torre Mayor - Zona Rosa | 135 | 37 | 27.407407 | 72.592593 | . 4 Santa Fe - Desierto de los Leones | 14 | 9 | 64.285714 | 35.714286 | . 5 Condesa - Roma | 33 | 5 | 15.151515 | 84.848485 | . 6 Centro Historico - Alameda | 97 | 17 | 17.525773 | 82.474227 | . 7 Tlalpan - Taxquena | 82 | 5 | 6.097561 | 93.902439 | . 8 Coyoacan-Xoco-Atoyac | 4 | 3 | 75.000000 | 25.000000 | . 9 Aeropuerto - Foro Sol | 37 | 7 | 18.918919 | 81.081081 | . 10 Norte - Basilica de Guadalupe | 94 | 14 | 14.893617 | 85.106383 | . 11 Iztapalapa - Central de Abastos | 20 | 2 | 10.000000 | 90.000000 | . 12 Xochimilco - Milpa Alta - Tlahuac | 7 | 0 | 0.000000 | 100.000000 | . def truncate(n, decimals=0): multiplier = 10 ** decimals return int(n * multiplier) / multiplier #Hacemos grafica plt.figure(figsize=(20,15), dpi= 80) ax1 =plt.bar(dif_hot[&#39;CAT_Zonas_&#39;],dif_hot[&#39;prc_muestra&#39;], alpha = 0.9, width=.9, label=&#39;PRC_MUESTRA&#39;, color=&#39;#3182bd&#39;,bottom=dif_hot[&#39;prc_tot&#39;]) ax2 =plt.bar(dif_hot[&#39;CAT_Zonas_&#39;], dif_hot[&#39;prc_tot&#39;], alpha = 0.5, width=.9, label=&#39;PRC_TOTAL&#39;, color=&#39;#a8ddb5&#39;) #Posicionamos las etiquetas for r1, r2 in zip(ax1, ax2): h1 = r1.get_height() h2 = r2.get_height() plt.text(r1.get_x() + r1.get_width() / 2., h2 + h1/ 2., truncate(h1,1), ha=&quot;center&quot;, va=&quot;center&quot;, color=&quot;black&quot;, fontsize=20,alpha = 1) plt.text(r2.get_x() + r2.get_width() / 2., h2 / 2., truncate(h2,1), ha=&quot;center&quot;, va=&quot;center&quot;, color=&quot;black&quot;, fontsize=20, alpha = 1) plt.text(&#39;Chapultepec - Polanco&#39;, 102, &quot;28&quot;, horizontalalignment=&#39;center&#39;, size=&#39;large&#39;, fontsize=20,color=&#39;#1f78b4&#39;) plt.text(&#39;Perisur - Ajusco&#39;, 102, &quot;25&quot;, horizontalalignment=&#39;center&#39;, size=&#39;large&#39;, fontsize=20,color=&#39;#1f78b4&#39;) plt.text(&#39;W.T.C. - San Angel - C.U.&#39;, 102, &quot;41&quot;, horizontalalignment=&#39;center&#39;, size=&#39;large&#39;,fontsize=20, color=&#39;#1f78b4&#39;) plt.text(&#39;Torre Mayor - Zona Rosa&#39;, 102, &quot;135&quot;, horizontalalignment=&#39;center&#39;, size=&#39;large&#39;, fontsize=20,color=&#39;#1f78b4&#39;) plt.text(&#39;Santa Fe - Desierto de los Leones&#39;, 102, &quot;14&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, fontsize=20,color=&#39;#1f78b4&#39;) plt.text(&#39;Condesa - Roma&#39;, 102, &quot;33&quot;, horizontalalignment=&#39;center&#39;, size=&#39;large&#39;, fontsize=20,color=&#39;#1f78b4&#39;) plt.text(&#39;Centro Historico - Alameda&#39;, 102, &quot;97&quot;, horizontalalignment=&#39;center&#39;, size=&#39;large&#39;, fontsize=20,color=&#39;#1f78b4&#39;) plt.text(&#39;Tlalpan - Taxquena&#39;, 102, &quot;82&quot;, horizontalalignment=&#39;center&#39;, size=&#39;large&#39;, fontsize=20,color=&#39;#1f78b4&#39;) plt.text(&#39;Coyoacan-Xoco-Atoyac&#39;, 102, &quot;4&quot;, horizontalalignment=&#39;center&#39;, size=&#39;large&#39;, fontsize=20,color=&#39;#1f78b4&#39;) plt.text(&#39;Aeropuerto - Foro Sol&#39;, 102, &quot;37&quot;, horizontalalignment=&#39;center&#39;, size=&#39;large&#39;, fontsize=20,color=&#39;#1f78b4&#39;) plt.text(&#39;Norte - Basilica de Guadalupe&#39;, 102, &quot;94&quot;, horizontalalignment=&#39;center&#39;, size=&#39;large&#39;,fontsize=20, color=&#39;#1f78b4&#39;) plt.text(&#39;Iztapalapa - Central de Abastos&#39;, 102, &quot;20&quot;, horizontalalignment=&#39;center&#39;, size=&#39;large&#39;, fontsize=20,color=&#39;#1f78b4&#39;) plt.text(&#39;Xochimilco - Milpa Alta - Tlahuac&#39;, 102, &quot;7&quot;, horizontalalignment=&#39;center&#39;, size=&#39;large&#39;, fontsize=20,color=&#39;#1f78b4&#39;) #Posicionamos la leyenda plt.legend(bbox_to_anchor=(1.01,0.5), loc=&#39;center left&#39;, prop={&#39;size&#39;:15}) plt.xticks(dif_hot[&#39;CAT_Zonas_&#39;], fontsize = 15, rotation =90) plt.yticks(fontsize = 15) plt.ylabel(&quot;Porcentaje de Hoteles en la muestra&quot;, fontsize=15) #plt.xlabel(&quot;Countries&quot;) plt.title(&quot;%HOTELES POR ZONA TURISTICA&quot;, pad = 50,loc=&#39;left&#39;, fontsize=20, fontweight=0, color=&#39;darkred&#39;) plt.ylim=1.0 #Quitamos las lineas plt.gca().spines[&#39;top&#39;].set_visible(False) plt.gca().spines[&#39;bottom&#39;].set_visible(False) plt.gca().spines[&#39;left&#39;].set_visible(False) plt.gca().spines[&#39;right&#39;].set_visible(False) # rotate axis labels #plt.setp(plt.gca().get_xticklabels(), rotation=90, horizontalalignment=&#39;center&#39;, fontsize = 20) #plt.setp(plt.gca().get_yticklabels(), fontsize = 15) #Guardamos grafico plt.savefig(&#39;/Users/daniel.rodriguez/Documents/HOTELES CDMX/GRAPH/prc_hoteles.png&#39;, format = &#39;png&#39;, dpi = 300, bbox_inches = &quot;tight&quot;) #Mostramos grafico plt.show() . &#191;Cu&#225;l es el porcentaje de ocupaci&#243;n por d&#237;a de la semana? . con_g_b = conce_bren.groupby([&#39;CAT_Zonas_&#39;,&#39;DIAS_SEM&#39;]).sum().reset_index() con_g_b = con_g_b[[&#39;CAT_Zonas_&#39;,&#39;DIAS_SEM&#39;,&#39;CO&#39;,&#39;CD&#39;,&#39;TARIFA_PROMEDIO&#39;]] con_g_b[&#39;PRC_OCUP&#39;]= con_g_b[&#39;CO&#39;]/con_g_b[&#39;CD&#39;]*100 con_g_b.head(15) . CAT_Zonas_ DIAS_SEM CO CD TARIFA_PROMEDIO PRC_OCUP . 0 Aeropuerto-Foro Sol | DOMINGO | 60214.0 | 80475.0 | 736029.42 | 74.823237 | . 1 Aeropuerto-Foro Sol | JUEVES | 71492.0 | 79520.0 | 846349.52 | 89.904427 | . 2 Aeropuerto-Foro Sol | LUNES | 64360.0 | 79520.0 | 781880.57 | 80.935614 | . 3 Aeropuerto-Foro Sol | MARTES | 68074.0 | 79520.0 | 818725.00 | 85.606137 | . 4 Aeropuerto-Foro Sol | MIERCOLES | 70684.0 | 79520.0 | 833656.36 | 88.888330 | . 5 Aeropuerto-Foro Sol | SABADO | 57197.0 | 79440.0 | 708584.45 | 72.000252 | . 6 Aeropuerto-Foro Sol | VIERNES | 63210.0 | 79440.0 | 741664.50 | 79.569486 | . 7 Centro Historico-Alameda | DOMINGO | 65600.0 | 100328.0 | 1380207.21 | 65.385535 | . 8 Centro Historico-Alameda | JUEVES | 77197.0 | 99427.0 | 1418893.85 | 77.641888 | . 9 Centro Historico-Alameda | LUNES | 67135.0 | 99608.0 | 1391371.87 | 67.399205 | . 10 Centro Historico-Alameda | MARTES | 72180.0 | 99620.0 | 1394775.40 | 72.455330 | . 11 Centro Historico-Alameda | MIERCOLES | 76042.0 | 99586.0 | 1416907.45 | 76.358123 | . 12 Centro Historico-Alameda | SABADO | 77800.0 | 99169.0 | 1445827.64 | 78.451936 | . 13 Centro Historico-Alameda | VIERNES | 76828.0 | 99249.0 | 1432347.14 | 77.409344 | . 14 Chapultepec-Polanco | DOMINGO | 86900.0 | 159955.0 | 1595432.66 | 54.327780 | . fin_sem = [&#39;SABADO&#39;,&#39;DOMINGO&#39;] sem = [&#39;LUNES&#39;,&#39;MARTES&#39;,&#39;MIERCOLES&#39;,&#39;JUEVES&#39;,&#39;VIERNES&#39;] aer_foro_fin = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Aeropuerto-Foro Sol&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(fin_sem))] aer_foro_sem = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Aeropuerto-Foro Sol&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(sem))] cen_alameda_fin = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Centro Historico-Alameda&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(fin_sem))] cen_alameda_sem = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Centro Historico-Alameda&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(sem))] chap_pol_fin = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Chapultepec-Polanco&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(fin_sem))] chap_pol_sem = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Chapultepec-Polanco&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(sem))] cond_rom_fin = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Condesa-Roma&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(fin_sem))] cond_rom_sem = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Condesa-Roma&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(sem))] coyo_xo_ato_fin = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Coyoacan-Xoco-Atoyac&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(fin_sem))] coyo_xo_ato_sem = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Coyoacan-Xoco-Atoyac&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(sem))] izt_abasto_fin = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Iztapalapa-Central de Abasto&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(fin_sem))] izt_abasto_sem = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Iztapalapa-Central de Abasto&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(sem))] nte_basi_fin = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Norte-Basilica de Guadalupe&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(fin_sem))] nte_basi_sem = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Norte-Basilica de Guadalupe&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(sem))] peri_ajusco_fin = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Perisur-Ajusco&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(fin_sem))] peri_ajusco_sem = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Perisur-Ajusco&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(sem))] stafe_leo_fin = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Santa Fe-Desierto de los Leones&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(fin_sem))] stafe_leo_sem = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Santa Fe-Desierto de los Leones&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(sem))] tlal_tax_fin = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Tlalpan-Taxquena&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(fin_sem))] tlal_tax_sem = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Tlalpan-Taxquena&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(sem))] torre_rosa_fin = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Torre Mayor-Zona Rosa&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(fin_sem))] torre_rosa_sem = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;Torre Mayor-Zona Rosa&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(sem))] wtc_angel_cu_fin = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;W.T.C.-San Angel-C.U.&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(fin_sem))] wtc_angel_cu_sem = con_g_b[(con_g_b[&#39;CAT_Zonas_&#39;]==&#39;W.T.C.-San Angel-C.U.&#39;)&amp;(con_g_b[&#39;DIAS_SEM&#39;].isin(sem))] . fin_semana_b = pd.concat([aer_foro_fin.reset_index(drop = True), cen_alameda_fin.reset_index(drop = True), chap_pol_fin.reset_index(drop = True), cond_rom_fin.reset_index(drop = True), coyo_xo_ato_fin.reset_index(drop = True), izt_abasto_fin.reset_index(drop = True), nte_basi_fin.reset_index(drop = True), peri_ajusco_fin.reset_index(drop = True), stafe_leo_fin.reset_index(drop = True), tlal_tax_fin.reset_index(drop = True), torre_rosa_fin.reset_index(drop = True), wtc_angel_cu_fin.reset_index(drop = True)], axis = 0) semana_b = pd.concat([aer_foro_sem.reset_index(drop = True), cen_alameda_sem.reset_index(drop = True), chap_pol_sem.reset_index(drop = True), cond_rom_sem.reset_index(drop = True), coyo_xo_ato_sem.reset_index(drop = True), izt_abasto_sem.reset_index(drop = True), nte_basi_sem.reset_index(drop = True), peri_ajusco_sem.reset_index(drop = True), stafe_leo_sem.reset_index(drop = True), tlal_tax_sem.reset_index(drop = True), torre_rosa_sem.reset_index(drop = True), wtc_angel_cu_sem.reset_index(drop = True)], axis = 0) dia_semana_b = pd.concat([fin_semana_b.reset_index(drop= True), semana_b.reset_index(drop=True)], axis = 0) . fig, ax = plt.subplots(figsize=(20, 16)) order_sem = dia_semana_b.sort_values(&#39;PRC_OCUP&#39;, ascending= False) x = np.arange(len(order_sem.CAT_Zonas_.unique())) bar_width = 0.13 b1 = ax.bar(x, order_sem.loc[order_sem[&#39;DIAS_SEM&#39;]==&#39;LUNES&#39;,&#39;PRC_OCUP&#39;], width = bar_width, label = &#39;LUNES&#39;) b2 = ax.bar(x+bar_width, order_sem.loc[order_sem[&#39;DIAS_SEM&#39;]==&#39;MARTES&#39;,&#39;PRC_OCUP&#39;], width = bar_width,label = &#39;MARTES&#39;) b3 = ax.bar(x+bar_width+bar_width, order_sem.loc[order_sem[&#39;DIAS_SEM&#39;]==&#39;MIERCOLES&#39;,&#39;PRC_OCUP&#39;], width = bar_width,label = &#39;MIERCOLES&#39;) b4 = ax.bar(x+bar_width+bar_width+bar_width, order_sem.loc[order_sem[&#39;DIAS_SEM&#39;]==&#39;JUEVES&#39;,&#39;PRC_OCUP&#39;], width = bar_width,label = &#39;JUEVES&#39;) b5 = ax.bar(x+bar_width+bar_width+bar_width+bar_width, order_sem.loc[order_sem[&#39;DIAS_SEM&#39;]==&#39;VIERNES&#39;,&#39;PRC_OCUP&#39;], width = bar_width,label = &#39;VIERNES&#39;) b6 = ax.bar(x+bar_width+bar_width+bar_width+bar_width+bar_width, order_sem.loc[order_sem[&#39;DIAS_SEM&#39;]==&#39;SABADO&#39;,&#39;PRC_OCUP&#39;], width = bar_width,label = &#39;SABADO&#39;) b7 = ax.bar(x+bar_width+bar_width+bar_width+bar_width+bar_width+bar_width, order_sem.loc[order_sem[&#39;DIAS_SEM&#39;]==&#39;DOMINGO&#39;,&#39;PRC_OCUP&#39;], width = bar_width,label = &#39;DOMINGO&#39;) vals = ax.get_yticks() ax.set_yticklabels([&#39;{:,.0f}%&#39;.format(x) for x in vals],fontsize = 13) #plt.xticks(fontsize = 12) ax.legend() plt.title(&quot;Ocupación (%) por Zona Turística por día de Semana&quot;, loc=&#39;left&#39;, fontsize=20, fontweight=0, color=&#39;darkred&#39;) # Fix the x-axes. ax.set_xticks([p + 2.5 * bar_width for p in x]) ax.set_xticklabels(order_sem.CAT_Zonas_.unique()) ax.tick_params(axis = &#39;x&#39;,rotation = 90,labelsize = 18) ax.tick_params(axis = &#39;y&#39;,labelsize = 18) ax.spines[&quot;top&quot;].set_visible(False) ax.spines[&quot;right&quot;].set_visible(False) fig.savefig(&#39;/Users/daniel.rodriguez/Documents/HOTELES CDMX/GRAPH/ocupa_sem_bren.png&#39;, format = &#39;png&#39;, dpi = 300, bbox_inches = &quot;tight&quot;) . fig, ax = plt.subplots(figsize=(20, 16)) order_fin = fin_semana_b.sort_values(&#39;PRC_OCUP&#39;, ascending= False) x = np.arange(len(order_fin.CAT_Zonas_.unique())) bar_width = 0.4 b1 = ax.bar(x, order_fin.loc[order_fin[&#39;DIAS_SEM&#39;]==&#39;SABADO&#39;,&#39;PRC_OCUP&#39;], width = bar_width, label = &#39;SABADO&#39;) b2 = ax.bar(x + bar_width, order_fin.loc[order_fin[&#39;DIAS_SEM&#39;]==&#39;DOMINGO&#39;,&#39;PRC_OCUP&#39;], width = bar_width,label = &#39;DOMINGO&#39;) ax.legend() plt.title(&quot;Porcentaje de Ocupación Fin de Semana por Zona Turística&quot;, loc=&#39;left&#39;, fontsize=20, fontweight=0, color=&#39;darkred&#39;) # Fix the x-axes. ax.set_xticks(x + bar_width / 2) ax.set_xticklabels(order_fin.CAT_Zonas_.unique()) ax.tick_params(axis = &#39;x&#39;,rotation = 90,labelsize = 18) ax.tick_params(axis = &#39;y&#39;,labelsize = 18) ax.spines[&quot;top&quot;].set_visible(False) ax.spines[&quot;right&quot;].set_visible(False) fig.savefig(&#39;/Users/daniel.rodriguez/Documents/HOTELES CDMX/GRAPH/ocupa_fin_bren.png&#39;, format = &#39;png&#39;, dpi = 300, bbox_inches = &quot;tight&quot;) . &#191;C&#243;mo se comporta el porcentaje de ocupaci&#243;n por mes y semana del a&#241;o 2018 y 2019? . conce_bren.columns . Index([&#39;NOMBRE_HOTEL&#39;, &#39;RTCDMX&#39;, &#39;ZONA_TURISTICA&#39;, &#39;CATEGORIA&#39;, &#39;FECHA&#39;, &#39;SEMANA&#39;, &#39;DIAS_SEM&#39;, &#39;DIAS_MES&#39;, &#39;MES&#39;, &#39;MES_NUM&#39;, &#39;AÑO&#39;, &#39;CO&#39;, &#39;CD&#39;, &#39;PRC_OCUP&#39;, &#39;TARIFA_PROMEDIO&#39;, &#39;CAT_Zonas_&#39;, &#39;bool&#39;], dtype=&#39;object&#39;) . plt.style.use(&#39;default&#39;) concentrado1 = conce_bren[conce_bren[&#39;AÑO&#39;]==2018] table = pd.pivot_table(concentrado1, values = &#39;PRC_OCUP&#39;, index = [&#39;CAT_Zonas_&#39;], columns = [&#39;SEMANA&#39;]) table = table.reset_index() #table = table[[&#39;CAT_Zonas_&#39;,&#39;ENERO&#39;, &#39;FEBRERO&#39;,&#39;MARZO&#39;,&#39;ABRIL&#39;,&#39;MAYO&#39;,&#39;JUNIO&#39;,&#39;JULIO&#39;,&#39;AGOSTO&#39;,&#39;SEPTIEMBRE&#39;,&#39;OCTUBRE&#39;,&#39;NOVIEMBRE&#39;,&#39;DICIEMBRE&#39;]] x1 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53] y1 = table.iloc[0,1:54].values*100 y2 = table.iloc[1,1:54].values*100 y3 = table.iloc[2,1:54].values*100 y4 = table.iloc[3,1:54].values*100 y5 = table.iloc[4,1:54].values*100 y6 = table.iloc[5,1:54].values*100 y7 = table.iloc[6,1:54].values*100 y8 = table.iloc[7,1:54].values*100 y9 = table.iloc[8,1:54].values*100 y10 = table.iloc[9,1:54].values*100 y11 = table.iloc[10,1:54].values*100 y12 = table.iloc[11,1:54].values*100 fig, ax = plt.subplots(figsize=(15, 10)) #ax.plot(x1, y1, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[0,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y2, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[1,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y3, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[2,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y4, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[3,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y5, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[4,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y6, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[5,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y7, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[6,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y8, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[7,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y9, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[8,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y10, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[9,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y11, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[10,&#39;CAT_Zonas_&#39;]) ax.plot(x1, y12, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[11,&#39;CAT_Zonas_&#39;]) vals = ax.get_yticks() ax.set_yticklabels([&#39;{:,.0f}%&#39;.format(x) for x in vals],fontsize = 13) plt.xticks(fontsize = 12) #plt.text(&#39;DICIEMBRE&#39;, table.loc[0,&#39;DICIEMBRE&#39;], &quot; Aeropuerto-Foro Sol&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#a6cee3&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[1,&#39;DICIEMBRE&#39;], &quot; Centro Histórico-Alameda&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#1f78b4&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[2,&#39;DICIEMBRE&#39;], &quot; Chapultepec-Polanco&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#b2df8a&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[3,&#39;DICIEMBRE&#39;], &quot; Condesa-Roma&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#33a02c&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[4,&#39;DICIEMBRE&#39;], &quot; Coyoacán-Xoco-Atoyac&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#fb9a99&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[5,&#39;DICIEMBRE&#39;], &quot; Iztapalapa-Central de Abasto5&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#e31a1c&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[6,&#39;DICIEMBRE&#39;], &quot; Norte-Basílica de Guadalupe&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#fdbf6f&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[7,&#39;DICIEMBRE&#39;], &quot; Perisur-Ajusco&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#ff7f00&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[8,&#39;DICIEMBRE&#39;], &quot; Santa Fe-Desierto de los Leones&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#cab2d6&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[9,&#39;DICIEMBRE&#39;], &quot; Tlalpan-Taxqueña&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#6a3d9a&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[10,&#39;DICIEMBRE&#39;], &quot; Torre Mayor-Zona Rosa&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#ffff99&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[11,&#39;DICIEMBRE&#39;], &quot; W.T.C.-San Ángel-C.U&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#b15928&#39;) plt.ylabel(&quot;Ocupación (%)&quot;,fontsize =15) plt.xlabel(&quot;Semana del Año&quot;,fontsize =20) ax.spines[&quot;top&quot;].set_visible(False) ax.spines[&quot;right&quot;].set_visible(False) #ax.grid(axis =&#39;both&#39;, color = &#39;silver&#39;, linewidth = 0.5, alpha = 0.5) #ax.legend() plt.title(&quot;Ocupación (%) WTC-San Ángel-CU Semanal 2018&quot;, loc=&#39;left&#39;, fontsize=20, fontweight=0, color=&#39;gray&#39;) fig.savefig(&#39;/Users/daniel.rodriguez/Documents/HOTELES CDMX/GRAPH/prc_ocupa_sem_wtc18.png&#39;, format = &#39;png&#39;, dpi = 300, bbox_inches = &quot;tight&quot;) . plt.style.use(&#39;default&#39;) concentrado1 = conce_bren[conce_bren[&#39;AÑO&#39;]==2019] table = pd.pivot_table(concentrado1, values = &#39;PRC_OCUP&#39;, index = [&#39;CAT_Zonas_&#39;], columns = [&#39;SEMANA&#39;]) table = table.reset_index() #table = table[[&#39;CAT_Zonas_&#39;,&#39;ENERO&#39;, &#39;FEBRERO&#39;,&#39;MARZO&#39;,&#39;ABRIL&#39;,&#39;MAYO&#39;,&#39;JUNIO&#39;,&#39;JULIO&#39;,&#39;AGOSTO&#39;,&#39;SEPTIEMBRE&#39;,&#39;OCTUBRE&#39;,&#39;NOVIEMBRE&#39;,&#39;DICIEMBRE&#39;]] x1 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31] y1 = table.iloc[0,1:32].values*100 y2 = table.iloc[1,1:32].values*100 y3 = table.iloc[2,1:32].values*100 y4 = table.iloc[3,1:32].values*100 y5 = table.iloc[4,1:32].values*100 y6 = table.iloc[5,1:32].values*100 y7 = table.iloc[6,1:32].values*100 y8 = table.iloc[7,1:32].values*100 y9 = table.iloc[8,1:32].values*100 y10 = table.iloc[9,1:32].values*100 y11 = table.iloc[10,1:32].values*100 y12 = table.iloc[11,1:32].values*100 fig, ax = plt.subplots(figsize=(15, 10)) #ax.plot(x1, y1, marker=&#39;.&#39;, color=&#39;#a6cee3&#39;, alpha = 1, linewidth=2, label=table.loc[0,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y2, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[1,&#39;CAT_Zonas_&#39;]) ax.plot(x1, y3, marker=&#39;.&#39;, color=&#39;#b2df8a&#39;, alpha = 1, linewidth=2, label=table.loc[2,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y4, marker=&#39;.&#39;, color=&#39;#33a02c&#39;, alpha = 1, linewidth=2, label=table.loc[3,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y5, marker=&#39;.&#39;, color=&#39;#fb9a99&#39;, alpha = 1, linewidth=2, label=table.loc[4,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y6, marker=&#39;.&#39;, color=&#39;#e31a1c&#39;, alpha = 1, linewidth=2, label=table.loc[5,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y7, marker=&#39;.&#39;, color=&#39;#fdbf6f&#39;, alpha = 1, linewidth=2, label=table.loc[6,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y8, marker=&#39;.&#39;, color=&#39;#ff7f00&#39;, alpha = 1, linewidth=2, label=table.loc[7,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y9, marker=&#39;.&#39;, color=&#39;#cab2d6&#39;, alpha = 1, linewidth=2, label=table.loc[8,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y10, marker=&#39;.&#39;, color=&#39;#6a3d9a&#39;, alpha = 1, linewidth=2, label=table.loc[9,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y11, marker=&#39;.&#39;, color=&#39;#ffff99&#39;, alpha = 1, linewidth=2, label=table.loc[10,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y12, marker=&#39;.&#39;, color=&#39;#b15928&#39;, alpha = 1, linewidth=2, label=table.loc[11,&#39;CAT_Zonas_&#39;]) vals = ax.get_yticks() ax.set_yticklabels([&#39;{:,.2f}&#39;.format(x) for x in vals],fontsize = 13) plt.xticks(fontsize = 12) #plt.text(&#39;DICIEMBRE&#39;, table.loc[0,&#39;DICIEMBRE&#39;], &quot; Aeropuerto-Foro Sol&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#a6cee3&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[1,&#39;DICIEMBRE&#39;], &quot; Centro Histórico-Alameda&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#1f78b4&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[2,&#39;DICIEMBRE&#39;], &quot; Chapultepec-Polanco&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#b2df8a&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[3,&#39;DICIEMBRE&#39;], &quot; Condesa-Roma&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#33a02c&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[4,&#39;DICIEMBRE&#39;], &quot; Coyoacán-Xoco-Atoyac&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#fb9a99&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[5,&#39;DICIEMBRE&#39;], &quot; Iztapalapa-Central de Abasto5&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#e31a1c&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[6,&#39;DICIEMBRE&#39;], &quot; Norte-Basílica de Guadalupe&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#fdbf6f&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[7,&#39;DICIEMBRE&#39;], &quot; Perisur-Ajusco&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#ff7f00&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[8,&#39;DICIEMBRE&#39;], &quot; Santa Fe-Desierto de los Leones&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#cab2d6&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[9,&#39;DICIEMBRE&#39;], &quot; Tlalpan-Taxqueña&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#6a3d9a&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[10,&#39;DICIEMBRE&#39;], &quot; Torre Mayor-Zona Rosa&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#ffff99&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[11,&#39;DICIEMBRE&#39;], &quot; W.T.C.-San Ángel-C.U&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#b15928&#39;) plt.ylabel(&quot;Porcentaje de Ocupación por semana&quot;,fontsize =15) plt.xlabel(&quot;&quot;,fontsize =20) ax.spines[&quot;top&quot;].set_visible(False) ax.spines[&quot;right&quot;].set_visible(False) #ax.grid(axis =&#39;both&#39;, color = &#39;silver&#39;, linewidth = 0.5, alpha = 0.5) ax.legend() plt.title(&quot;Porcentaje de Ocupación Chapultepec Polanco semanal 2019&quot;, loc=&#39;left&#39;, fontsize=20, fontweight=0, color=&#39;darkred&#39;) fig.savefig(&#39;/Users/daniel.rodriguez/Documents/HOTELES CDMX/GRAPH/prc_ocupa_sem_bren_chapul_pol19.png&#39;, format = &#39;png&#39;, dpi = 300, bbox_inches = &quot;tight&quot;) . concentrado1 = conce_bren[conce_bren[&#39;AÑO&#39;]==2018] table = pd.pivot_table(concentrado1, values = &#39;PRC_OCUP&#39;, index = [&#39;CAT_Zonas_&#39;], columns = [&#39;MES&#39;]) table = table.reset_index() table = table[[&#39;CAT_Zonas_&#39;,&#39;ENERO&#39;, &#39;FEBRERO&#39;,&#39;MARZO&#39;,&#39;ABRIL&#39;,&#39;MAYO&#39;,&#39;JUNIO&#39;,&#39;JULIO&#39;,&#39;AGOSTO&#39;,&#39;SEPTIEMBRE&#39;,&#39;OCTUBRE&#39;,&#39;NOVIEMBRE&#39;,&#39;DICIEMBRE&#39;]] x1 = [&#39;ENERO&#39;, &#39;FEBRERO&#39;,&#39;MARZO&#39;,&#39;ABRIL&#39;,&#39;MAYO&#39;,&#39;JUNIO&#39;,&#39;JULIO&#39;,&#39;AGOSTO&#39;,&#39;SEPTIEMBRE&#39;,&#39;OCTUBRE&#39;,&#39;NOVIEMBRE&#39;,&#39;DICIEMBRE&#39;] y1 = table.loc[0,&#39;ENERO&#39;:&#39;DICIEMBRE&#39;].values*100 y2 = table.loc[1,&#39;ENERO&#39;:&#39;DICIEMBRE&#39;].values*100 y3 = table.loc[2,&#39;ENERO&#39;:&#39;DICIEMBRE&#39;].values*100 y4 = table.loc[3,&#39;ENERO&#39;:&#39;DICIEMBRE&#39;].values*100 y5 = table.loc[4,&#39;ENERO&#39;:&#39;DICIEMBRE&#39;].values*100 y6 = table.loc[5,&#39;ENERO&#39;:&#39;DICIEMBRE&#39;].values*100 y7 = table.loc[6,&#39;ENERO&#39;:&#39;DICIEMBRE&#39;].values*100 y8 = table.loc[7,&#39;ENERO&#39;:&#39;DICIEMBRE&#39;].values*100 y9 = table.loc[8,&#39;ENERO&#39;:&#39;DICIEMBRE&#39;].values*100 y10 = table.loc[9,&#39;ENERO&#39;:&#39;DICIEMBRE&#39;].values*100 y11 = table.loc[10,&#39;ENERO&#39;:&#39;DICIEMBRE&#39;].values*100 y12 = table.loc[11,&#39;ENERO&#39;:&#39;DICIEMBRE&#39;].values*100 fig, ax = plt.subplots(figsize=(15, 10)) #ax.plot(x1, y1, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[0,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y2, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[1,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y3, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[2,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y4, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[3,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y5, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[4,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y6, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[5,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y7, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[6,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y8, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[7,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y9, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[8,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y10, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[9,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y11, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[10,&#39;CAT_Zonas_&#39;]) ax.plot(x1, y12, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[11,&#39;CAT_Zonas_&#39;]) vals = ax.get_yticks() ax.set_yticklabels([&#39;{:,.0f}%&#39;.format(x) for x in vals],fontsize = 13) plt.xticks(fontsize = 12) #plt.text(&#39;DICIEMBRE&#39;, table.loc[0,&#39;DICIEMBRE&#39;], &quot; Aeropuerto-Foro Sol&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#a6cee3&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[1,&#39;DICIEMBRE&#39;], &quot; Centro Histórico-Alameda&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#1f78b4&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[2,&#39;DICIEMBRE&#39;], &quot; Chapultepec-Polanco&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#b2df8a&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[3,&#39;DICIEMBRE&#39;], &quot; Condesa-Roma&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#33a02c&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[4,&#39;DICIEMBRE&#39;], &quot; Coyoacán-Xoco-Atoyac&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#fb9a99&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[5,&#39;DICIEMBRE&#39;], &quot; Iztapalapa-Central de Abasto5&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#e31a1c&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[6,&#39;DICIEMBRE&#39;], &quot; Norte-Basílica de Guadalupe&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#fdbf6f&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[7,&#39;DICIEMBRE&#39;], &quot; Perisur-Ajusco&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#ff7f00&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[8,&#39;DICIEMBRE&#39;], &quot; Santa Fe-Desierto de los Leones&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#cab2d6&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[9,&#39;DICIEMBRE&#39;], &quot; Tlalpan-Taxqueña&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#6a3d9a&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[10,&#39;DICIEMBRE&#39;], &quot; Torre Mayor-Zona Rosa&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#ffff99&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[11,&#39;DICIEMBRE&#39;], &quot; W.T.C.-San Ángel-C.U&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#b15928&#39;) plt.ylabel(&quot;Ocupación (%)&quot;,fontsize =15) plt.xlabel(&quot;Mes del Año&quot;,fontsize =20) ax.spines[&quot;top&quot;].set_visible(False) ax.spines[&quot;right&quot;].set_visible(False) #ax.grid(axis =&#39;both&#39;, color = &#39;silver&#39;, linewidth = 0.5, alpha = 0.5) #ax.legend() plt.title(&quot;Ocupación (%) WTC-San Ángel-CU Mensual 2018&quot;, loc=&#39;left&#39;, fontsize=20, fontweight=0, color=&#39;gray&#39;) fig.savefig(&#39;/Users/daniel.rodriguez/Documents/HOTELES CDMX/GRAPH/prc_ocupa_mes_wtc18.png&#39;, format = &#39;png&#39;, dpi = 300, bbox_inches = &quot;tight&quot;) . concentrado1 = conce_bren[conce_bren[&#39;AÑO&#39;]==2019] table = pd.pivot_table(concentrado1, values = &#39;PRC_OCUP&#39;, index = [&#39;CAT_Zonas_&#39;], columns = [&#39;MES&#39;]) table = table.reset_index() table = table[[&#39;CAT_Zonas_&#39;,&#39;ENERO&#39;, &#39;FEBRERO&#39;,&#39;MARZO&#39;,&#39;ABRIL&#39;,&#39;MAYO&#39;,&#39;JUNIO&#39;,&#39;JULIO&#39;,&#39;AGOSTO&#39;]] x1 = [&#39;ENERO&#39;, &#39;FEBRERO&#39;,&#39;MARZO&#39;,&#39;ABRIL&#39;,&#39;MAYO&#39;,&#39;JUNIO&#39;,&#39;JULIO&#39;,&#39;AGOSTO&#39;] y1 = table.loc[0,&#39;ENERO&#39;:&#39;AGOSTO&#39;].values*100 y2 = table.loc[1,&#39;ENERO&#39;:&#39;AGOSTO&#39;].values*100 y3 = table.loc[2,&#39;ENERO&#39;:&#39;AGOSTO&#39;].values*100 y4 = table.loc[3,&#39;ENERO&#39;:&#39;AGOSTO&#39;].values*100 y5 = table.loc[4,&#39;ENERO&#39;:&#39;AGOSTO&#39;].values*100 y6 = table.loc[5,&#39;ENERO&#39;:&#39;AGOSTO&#39;].values*100 y7 = table.loc[6,&#39;ENERO&#39;:&#39;AGOSTO&#39;].values*100 y8 = table.loc[7,&#39;ENERO&#39;:&#39;AGOSTO&#39;].values*100 y9 = table.loc[8,&#39;ENERO&#39;:&#39;AGOSTO&#39;].values*100 y10 = table.loc[9,&#39;ENERO&#39;:&#39;AGOSTO&#39;].values*100 y11 = table.loc[10,&#39;ENERO&#39;:&#39;AGOSTO&#39;].values*100 y12 = table.loc[11,&#39;ENERO&#39;:&#39;AGOSTO&#39;].values*100 fig, ax = plt.subplots(figsize=(15, 10)) #ax.plot(x1, y1, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[0,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y2, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[1,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y3, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[2,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y4, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[3,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y5, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[4,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y6, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[5,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y7, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[6,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y8, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[7,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y9, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[8,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y10, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[9,&#39;CAT_Zonas_&#39;]) #ax.plot(x1, y11, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[10,&#39;CAT_Zonas_&#39;]) ax.plot(x1, y12, marker=&#39;.&#39;, color=&#39;#1f78b4&#39;, alpha = 1, linewidth=2, label=table.loc[11,&#39;CAT_Zonas_&#39;]) vals = ax.get_yticks() ax.set_yticklabels([&#39;{:,.0f}%&#39;.format(x) for x in vals],fontsize = 13) plt.xticks(fontsize = 12) #plt.text(&#39;DICIEMBRE&#39;, table.loc[0,&#39;DICIEMBRE&#39;], &quot; Aeropuerto-Foro Sol&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#a6cee3&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[1,&#39;DICIEMBRE&#39;], &quot; Centro Histórico-Alameda&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#1f78b4&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[2,&#39;DICIEMBRE&#39;], &quot; Chapultepec-Polanco&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#b2df8a&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[3,&#39;DICIEMBRE&#39;], &quot; Condesa-Roma&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#33a02c&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[4,&#39;DICIEMBRE&#39;], &quot; Coyoacán-Xoco-Atoyac&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#fb9a99&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[5,&#39;DICIEMBRE&#39;], &quot; Iztapalapa-Central de Abasto5&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#e31a1c&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[6,&#39;DICIEMBRE&#39;], &quot; Norte-Basílica de Guadalupe&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#fdbf6f&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[7,&#39;DICIEMBRE&#39;], &quot; Perisur-Ajusco&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#ff7f00&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[8,&#39;DICIEMBRE&#39;], &quot; Santa Fe-Desierto de los Leones&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#cab2d6&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[9,&#39;DICIEMBRE&#39;], &quot; Tlalpan-Taxqueña&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#6a3d9a&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[10,&#39;DICIEMBRE&#39;], &quot; Torre Mayor-Zona Rosa&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#ffff99&#39;) #plt.text(&#39;DICIEMBRE&#39;, table.loc[11,&#39;DICIEMBRE&#39;], &quot; W.T.C.-San Ángel-C.U&quot;, horizontalalignment=&#39;left&#39;, size=&#39;large&#39;, color=&#39;#b15928&#39;) plt.ylabel(&quot;Ocupación (%)&quot;,fontsize =15) plt.xlabel(&quot;Mes del Año&quot;,fontsize =20) ax.spines[&quot;top&quot;].set_visible(False) ax.spines[&quot;right&quot;].set_visible(False) #ax.grid(axis =&#39;both&#39;, color = &#39;silver&#39;, linewidth = 0.5, alpha = 0.5) #ax.legend() plt.title(&quot;Ocupación (%) WTC-San Ángel-CU Mensual 2019&quot;, loc=&#39;left&#39;, fontsize=20, fontweight=0, color=&#39;gray&#39;) fig.savefig(&#39;/Users/daniel.rodriguez/Documents/HOTELES CDMX/GRAPH/prc_ocupa_mes_wtc19.png&#39;, format = &#39;png&#39;, dpi = 300, bbox_inches = &quot;tight&quot;) . &#191;Cu&#225;ntos Airbnb existen en un radio de 300m alrededor de los hoteles? . import geopandas as gpd url = (&#39;/Users/daniel.rodriguez/Documents/Hoteles CDMX/ZONAS_INF300/ZONAS_INFLUENCIA_300M.shp&#39;) zona_300 = gpd.read_file(url) zona_300.head() . OBJECTID CAT_Zonas_ Shape_Leng Shape_Area geometry . 0 1 | Aeropuerto - Foro Sol | 47288.654131 | 8.307150e+06 | (POLYGON ((489386.3210000005 2143667.6678, 489... | . 1 2 | Centro Historico - Alameda | 11835.621507 | 6.501867e+06 | POLYGON ((484872.9250999996 2150198.906400001,... | . 2 3 | Chapultepec - Polanco | 46569.371481 | 9.716436e+06 | (POLYGON ((480837.1151000001 2145995.589, 4808... | . 3 4 | Condesa - Zona Rosa | 15032.361805 | 4.619518e+06 | POLYGON ((483863.7829 2147510.852399999, 48387... | . 4 5 | Coyoacan | 3094.549327 | 5.454087e+05 | POLYGON ((482761.8032 2141292.4705, 482761.760... | . zona_300.info() . &lt;class &#39;geopandas.geodataframe.GeoDataFrame&#39;&gt; RangeIndex: 13 entries, 0 to 12 Data columns (total 5 columns): OBJECTID 13 non-null int64 CAT_Zonas_ 13 non-null object Shape_Leng 13 non-null float64 Shape_Area 13 non-null float64 geometry 13 non-null object dtypes: float64(2), int64(1), object(2) memory usage: 648.0+ bytes . zona_300.crs . {&#39;init&#39;: &#39;epsg:32614&#39;} . import geopandas as gpd url = (&#39;/Users/daniel.rodriguez/Documents/Hoteles CDMX/ZONAS_TURISTICAS/ZONAS_TURISTICAS_SEP2019.shp&#39;) zona_tur = gpd.read_file(url) zona_tur.head() . CAT_Zonas_ geometry . 0 Iztapalapa - Central de Abastos | POLYGON ((487189.3160802843 2140407.242675485,... | . 1 Torre Mayor - Zona Rosa | POLYGON ((484568.3957079658 2149180.813199172,... | . 2 Condesa - Roma | POLYGON ((483871.9510054048 2147957.256822979,... | . 3 Chapultepec - Polanco | POLYGON ((480012.7437940165 2152895.103658728,... | . 4 Perisur - Ajusco | POLYGON ((472336.869970886 2139462.249295114, ... | . zona_tur.crs ={&#39;init&#39;:&#39;epsg:32614&#39;} zona_tur.crs . {&#39;init&#39;: &#39;epsg:32614&#39;} . zona12.head() . CAT_Zonas_ geometry . 0 Iztapalapa - Central de Abastos | POLYGON ((-99.12197974597882 19.35766192285855... | . 1 Torre Mayor - Zona Rosa | POLYGON ((-99.14700654644166 19.43693257899282... | . 2 Condesa - Roma | POLYGON ((-99.15363069326013 19.42586952577939... | . 3 Chapultepec - Polanco | POLYGON ((-99.19044419899467 19.47045898200271... | . 4 Perisur - Ajusco | POLYGON ((-99.26338605979838 19.34897216208141... | . zona12 = zona_tur.to_crs({&#39;init&#39;:&#39;epsg:4326&#39;}) . new_hotels = pd.read_csv(&#39;/Users/daniel.rodriguez/Documents/HOTELES CDMX/BASES PROCESADAS/nuevo_hoteles.csv&#39;,sep = &#39;,&#39;, encoding = &#39;utf-8&#39;,header = 0, index_col =False) new_hotels.head() . hotel latitud longitud . 0 Living Cefiro by Stara | 19.307440 | -99.180707 | . 1 Sleep Inn Mexico City | 19.363216 | -99.283047 | . 2 Hotel Ryo Kan | 19.428835 | -99.171482 | . 3 Hotel El Greco | 19.385924 | -99.175834 | . from geopandas import GeoDataFrame from shapely.geometry import Point geometry = [Point(xy) for xy in zip(new_hotels[&#39;longitud&#39;], new_hotels[&#39;latitud&#39;])] new1 = new_hotels.drop([&#39;longitud&#39;, &#39;latitud&#39;], axis=1) crs = {&#39;init&#39;: &#39;epsg:4326&#39;} gdf_new = GeoDataFrame(new1, crs = crs, geometry=geometry) gdf_new.head() . hotel geometry . 0 Living Cefiro by Stara | POINT (-99.180707 19.30744) | . 1 Sleep Inn Mexico City | POINT (-99.283047 19.363216) | . 2 Hotel Ryo Kan | POINT (-99.171482 19.428835) | . 3 Hotel El Greco | POINT (-99.17583399999999 19.385924) | . zona12.CAT_Zonas_.unique() . array([&#39;Iztapalapa - Central de Abastos&#39;, &#39;Torre Mayor - Zona Rosa&#39;, &#39;Condesa - Roma&#39;, &#39;Chapultepec - Polanco&#39;, &#39;Perisur - Ajusco&#39;, &#39;Santa Fe - Desierto de los Leones&#39;, &#39;Norte - Basilica de Guadalupe&#39;, &#39;Tlalpan - TaxqueÃ±a&#39;, &#39;Coyoacan&#39;, &#39;WTC - San Angel - CU&#39;, &#39;Centro Historico - Alameda&#39;, &#39;Aeropuerto - Foro Sol&#39;, &#39;Xochimilco - Milpa Alta -Tlahuac&#39;], dtype=object) . zona12[zona12[&#39;CAT_Zonas_&#39;]==&#39;&#39;] . con_new = gpd.sjoin(gdf_new,zona12, how = &#39;inner&#39;, op = &#39;intersects&#39;) con_new . hotel geometry index_right CAT_Zonas_ . 0 Living Cefiro by Stara | POINT (-99.180707 19.30744) | 9 | WTC - San Angel - CU | . 3 Hotel El Greco | POINT (-99.17583399999999 19.385924) | 9 | WTC - San Angel - CU | . 1 Sleep Inn Mexico City | POINT (-99.283047 19.363216) | 5 | Santa Fe - Desierto de los Leones | . 2 Hotel Ryo Kan | POINT (-99.171482 19.428835) | 1 | Torre Mayor - Zona Rosa | . ig, ax = plt.subplots(figsize=(20,17)) zona12.plot(ax = ax, alpha = 0.3,edgecolor=&#39;black&#39;, label = &#39;Zonas&#39;) gdf_new.plot(ax = ax, alpha = 0.5, color =&#39;r&#39;, edgecolor=&#39;black&#39;, label = &#39;Hoteles Nuevos&#39;) plt.title(&#39;Hoteles Nuevos&#39;, fontsize=20, fontweight=0, color=&#39;gray&#39;) plt.legend() plt.axis(&#39;off&#39;) #ctx.add_basemap(ax, zoom =12,url=ctx.sources.ST_TONER_LITE) . (-99.38615527354291, -98.91907174246134, 19.021010633017358, 19.619983310772437) . air = pd.read_csv(&#39;/Users/daniel.rodriguez/Documents/HOTELES CDMX/AIRBNB/listings.csv&#39;,sep = &#39;,&#39;, encoding = &#39;utf-8&#39;,header = 0, index_col =False) air.head() . /anaconda3/envs/poder/lib/python3.7/site-packages/IPython/core/interactiveshell.py:3058: DtypeWarning: Columns (61,62,94) have mixed types. Specify dtype option on import or set low_memory=False. interactivity=interactivity, compiler=compiler, result=result) . id listing_url scrape_id last_scraped name summary space description experiences_offered neighborhood_overview notes transit access interaction house_rules thumbnail_url medium_url picture_url xl_picture_url host_id host_url host_name host_since host_location host_about host_response_time host_response_rate host_acceptance_rate host_is_superhost host_thumbnail_url host_picture_url host_neighbourhood host_listings_count host_total_listings_count host_verifications host_has_profile_pic host_identity_verified street neighbourhood neighbourhood_cleansed neighbourhood_group_cleansed city state zipcode market smart_location country_code country latitude longitude is_location_exact property_type room_type accommodates bathrooms bedrooms beds bed_type amenities square_feet price weekly_price monthly_price security_deposit cleaning_fee guests_included extra_people minimum_nights maximum_nights minimum_minimum_nights maximum_minimum_nights minimum_maximum_nights maximum_maximum_nights minimum_nights_avg_ntm maximum_nights_avg_ntm calendar_updated has_availability availability_30 availability_60 availability_90 availability_365 calendar_last_scraped number_of_reviews number_of_reviews_ltm first_review last_review review_scores_rating review_scores_accuracy review_scores_cleanliness review_scores_checkin review_scores_communication review_scores_location review_scores_value requires_license license jurisdiction_names instant_bookable is_business_travel_ready cancellation_policy require_guest_profile_picture require_guest_phone_verification calculated_host_listings_count calculated_host_listings_count_entire_homes calculated_host_listings_count_private_rooms calculated_host_listings_count_shared_rooms reviews_per_month . 0 14714 | https://www.airbnb.com/rooms/14714 | 20190716153352 | 2019-07-16 | Private room c/ bathroom . Colonia Juarez. | Departamento ubicado a dos cuadras de Reforma,... | La habitación es super luminosa, cuenta con un... | Departamento ubicado a dos cuadras de Reforma,... | none | La Colonia Juarez es hipster, bohemia, llena d... | No se permiten fiestas, mascotas, ni fumar den... | El metrobús Reforma y el metro Cuauhtémoc (lí... | La cocina, la sala, el roof garde en el tercer... | NaN | NaN | NaN | NaN | https://a0.muscache.com/im/pictures/634613ab-8... | NaN | 57785 | https://www.airbnb.com/users/show/57785 | Diego | 2009-11-26 | Mexico City, Mexico City, Mexico | Director de teatro. Viví en Buenos Aires, Mont... | within a few hours | 80% | NaN | f | https://a0.muscache.com/im/pictures/user/7ee08... | https://a0.muscache.com/im/pictures/user/7ee08... | Juárez | 2.0 | 2.0 | [&#39;email&#39;, &#39;phone&#39;, &#39;facebook&#39;, &#39;reviews&#39;, &#39;jum... | t | f | Ciudad de México, Ciudad de México, Mexico | Juárez | Cuauhtémoc | NaN | Ciudad de México | Ciudad de México | 06600 | Mexico City | Ciudad de México, Mexico | MX | Mexico | 19.43035 | -99.15511 | t | Apartment | Private room | 2 | 1.0 | 1.0 | 1.0 | Real Bed | {Wifi,Kitchen,&quot;Free parking on premises&quot;,&quot;Paid... | NaN | $474.00 | NaN | NaN | $0.00 | $285.00 | 1 | $379.00 | 2 | 20 | 2 | 2 | 20 | 20 | 2.0 | 20.0 | 3 weeks ago | t | 0 | 29 | 59 | 334 | 2019-07-16 | 0 | 0 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | f | NaN | {&quot;Ciudad de México&quot;} | f | f | strict_14_with_grace_period | f | f | 2 | 0 | 2 | 0 | NaN | . 1 22787 | https://www.airbnb.com/rooms/22787 | 20190716153352 | 2019-07-16 | Sunny suite w/ queen size bed, inside boutique... | This suite inside El Patio 77 - an eco-friendl... | El Patio 77 is the first eco-friendly bed and ... | This suite inside El Patio 77 - an eco-friendl... | none | Up-and-coming San Rafael neighborhood combines... | NaN | Circuito Interior, Ribera de San Cosme, and In... | Breakfast is served 8am to 10am. Concierge and... | Trilingual concierge service is here to help y... | This rooms share a bathroom between 2 rooms. ... | NaN | NaN | https://a0.muscache.com/im/pictures/b4768b03-c... | NaN | 87973 | https://www.airbnb.com/users/show/87973 | Diego | 2010-03-03 | Mexico City, Mexico City, Mexico | Soy Diego, soy francés pero vivo en México des... | within an hour | 100% | NaN | f | https://a0.muscache.com/im/users/87973/profile... | https://a0.muscache.com/im/users/87973/profile... | San Rafael | 10.0 | 10.0 | [&#39;email&#39;, &#39;phone&#39;, &#39;facebook&#39;, &#39;reviews&#39;, &#39;wor... | t | f | Mexico City, D.f., Mexico | San Rafael | Cuauhtémoc | NaN | Mexico City | D.f. | 06470 | Mexico City | Mexico City, Mexico | MX | Mexico | 19.44076 | -99.16324 | t | Boutique hotel | Private room | 2 | 1.0 | 1.0 | 1.0 | Real Bed | {Wifi,&quot;Paid parking off premises&quot;,Breakfast,Wa... | 248.0 | $1,954.00 | NaN | NaN | NaN | NaN | 2 | $0.00 | 1 | 365 | 1 | 1 | 365 | 365 | 1.0 | 365.0 | today | t | 17 | 47 | 71 | 317 | 2019-07-16 | 57 | 1 | 2010-06-26 | 2019-05-27 | 98.0 | 10.0 | 10.0 | 10.0 | 10.0 | 10.0 | 10.0 | f | NaN | {&quot;Ciudad de México&quot;} | t | f | strict_14_with_grace_period | f | f | 9 | 0 | 9 | 0 | 0.52 | . 2 33681 | https://www.airbnb.com/rooms/33681 | 20190716153352 | 2019-07-17 | Couple of Rooms | NaN | You will get the best view of one of the bigge... | You will get the best view of one of the bigge... | none | NaN | NaN | NaN | NaN | NaN | Do not disturbe ! | NaN | NaN | https://a0.muscache.com/im/pictures/294857/c6f... | NaN | 145672 | https://www.airbnb.com/users/show/145672 | Edubiel | 2010-06-16 | mexico | NaN | NaN | NaN | NaN | f | https://a0.muscache.com/im/users/145672/profil... | https://a0.muscache.com/im/users/145672/profil... | NaN | 1.0 | 1.0 | [&#39;facebook&#39;] | t | f | Mexico City, DF, Mexico | NaN | Tlalpan | NaN | Mexico City | DF | 14220 | Mexico City | Mexico City, Mexico | MX | Mexico | 19.27215 | -99.21848 | t | Hostel | Private room | 2 | NaN | 1.0 | 1.0 | Real Bed | {&quot;Free parking on premises&quot;,&quot;Smoking allowed&quot;,... | NaN | $1,732.00 | NaN | NaN | NaN | NaN | 1 | $0.00 | 1 | 730 | 1 | 1 | 730 | 730 | 1.0 | 730.0 | never | t | 30 | 60 | 90 | 365 | 2019-07-17 | 0 | 0 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | f | NaN | {&quot;Mexico City&quot;,&quot; MX Zip Codes 3&quot;} | f | f | flexible | f | f | 1 | 0 | 1 | 0 | NaN | . 3 35797 | https://www.airbnb.com/rooms/35797 | 20190716153352 | 2019-07-16 | Villa Dante | Dentro de Villa un estudio de arte con futon, ... | please go to (URL HIDDEN) and see the place a... | Dentro de Villa un estudio de arte con futon, ... | none | Centro comercial Santa Fe, parque interlomas y... | Si te gustan la tipo haciendas o decoración co... | Uber es buena opción o taxi | Jardin muy Amplio. | Cualquier duda contáctenos por esta vía. Se le... | Se renta un estudio dentro de la villa. Y est... | NaN | NaN | https://a0.muscache.com/im/pictures/201492/ef4... | NaN | 153786 | https://www.airbnb.com/users/show/153786 | Dici | 2010-06-28 | Mexico City, Mexico City, Mexico | Master in visual arts, film photography &amp; Mark... | NaN | NaN | NaN | f | https://a0.muscache.com/im/pictures/00de11fb-9... | https://a0.muscache.com/im/pictures/00de11fb-9... | NaN | 2.0 | 2.0 | [&#39;email&#39;, &#39;phone&#39;, &#39;reviews&#39;, &#39;jumio&#39;, &#39;offlin... | t | f | Mexico City, D.f., Mexico | NaN | Cuajimalpa de Morelos | NaN | Mexico City | D.f. | NaN | Mexico City | Mexico City, Mexico | MX | Mexico | 19.38399 | -99.27335 | f | Villa | Entire home/apt | 2 | 1.0 | 1.0 | 1.0 | Futon | {Wifi,Kitchen,&quot;Free parking on premises&quot;,&quot;Indo... | 32292.0 | $3,794.00 | NaN | $105,383.00 | NaN | NaN | 1 | $0.00 | 1 | 7 | 1 | 1 | 7 | 7 | 1.0 | 7.0 | 24 months ago | t | 28 | 58 | 88 | 363 | 2019-07-16 | 0 | 0 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | f | NaN | {&quot;Ciudad de México&quot;} | f | f | flexible | f | f | 2 | 1 | 1 | 0 | NaN | . 4 44616 | https://www.airbnb.com/rooms/44616 | 20190716153352 | 2019-07-16 | CONDESA HAUS B&amp;B | A new concept of hosting in mexico through a b... | Stay with us at this bed &amp; breakfast named CON... | A new concept of hosting in mexico through a b... | none | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | https://a0.muscache.com/im/pictures/251410/ec7... | NaN | 196253 | https://www.airbnb.com/users/show/196253 | Condesa Haus Bed &amp; Breakfast CDMX | 2010-08-09 | Mexico City, Distrito Federal, Mexico | Condesa Haus is Bed &amp; Breakfast located on th... | within a few hours | 100% | NaN | f | https://a0.muscache.com/im/users/196253/profil... | https://a0.muscache.com/im/users/196253/profil... | Condesa | 10.0 | 10.0 | [&#39;email&#39;, &#39;phone&#39;, &#39;reviews&#39;, &#39;offline_governm... | t | f | Mexico City, D.f., Mexico | Condesa | Cuauhtémoc | NaN | Mexico City | D.f. | 06140 | Mexico City | Mexico City, Mexico | MX | Mexico | 19.41006 | -99.17645 | t | Bed and breakfast | Private room | 16 | 9.0 | 9.0 | 1.0 | Real Bed | {TV,&quot;Cable TV&quot;,Internet,Wifi,&quot;Free parking on ... | NaN | $1,897.00 | NaN | NaN | $0.00 | $0.00 | 1 | $300.00 | 1 | 365 | 1 | 1 | 365 | 365 | 1.0 | 365.0 | 5 weeks ago | t | 13 | 39 | 69 | 344 | 2019-07-16 | 39 | 9 | 2011-11-09 | 2019-05-02 | 89.0 | 9.0 | 9.0 | 10.0 | 9.0 | 10.0 | 9.0 | f | NaN | {&quot;Ciudad de México&quot;} | f | f | strict_14_with_grace_period | f | f | 10 | 4 | 6 | 0 | 0.42 | . air_xy = air[[&#39;id&#39;,&#39;longitude&#39;,&#39;latitude&#39;]] air_xy.columns . Index([&#39;id&#39;, &#39;longitude&#39;, &#39;latitude&#39;], dtype=&#39;object&#39;) . from geopandas import GeoDataFrame from shapely.geometry import Point geometry = [Point(xy) for xy in zip(air_xy[&#39;longitude&#39;], air_xy[&#39;latitude&#39;])] air_xy1 = air_xy.drop([&#39;longitude&#39;, &#39;latitude&#39;], axis=1) crs = {&#39;init&#39;: &#39;epsg:4326&#39;} gdf = GeoDataFrame(air_xy1, crs = crs, geometry=geometry) gdf.head() . id geometry . 0 14714 | POINT (-99.15510999999999 19.43035) | . 1 22787 | POINT (-99.16324 19.44076) | . 2 33681 | POINT (-99.21848 19.27215) | . 3 35797 | POINT (-99.27334999999999 19.38399) | . 4 44616 | POINT (-99.17645 19.41006) | . gdf.crs . {&#39;init&#39;: &#39;epsg:4326&#39;} . air_shp = gdf.to_crs({&#39;init&#39;:&#39;epsg:32614&#39;}) air_shp.head() . id geometry . 0 14714 | POINT (483717.1004987835 2148453.175128175) | . 1 22787 | POINT (482864.7321007056 2149605.865768956) | . 2 33681 | POINT (477042.601701933 2130955.139789263) | . 3 35797 | POINT (471296.4931235336 2143338.709071) | . 4 44616 | POINT (481474.5985634 2146210.1764826) | . import contextily as ctx air1 = air_shp.to_crs(epsg = 3857) zona1 = zona_300.to_crs(epsg = 3857) . fig, ax = plt.subplots(figsize=(20,17)) air1.plot(ax = ax, alpha = 0.3,edgecolor=&#39;black&#39;, label = &#39;Airbnb&#39;) zona1.plot(ax = ax, alpha = 0.5, color =&#39;r&#39;, edgecolor=&#39;black&#39;, label = &#39;Hoteles Muestra&#39;) plt.title(&#39;Airbnb vs Hoteles&#39;, fontsize=20, fontweight=0, color=&#39;gray&#39;) plt.legend() plt.axis(&#39;off&#39;) ctx.add_basemap(ax, zoom =12,url=ctx.sources.ST_TONER_LITE) fig.savefig(&#39;/Users/daniel.rodriguez/Documents/HOTELES CDMX/GRAPH/mapairbnbvshoteles.png&#39;, format = &#39;png&#39;, dpi = 300, bbox_inches = &quot;tight&quot;) . joined = gpd.sjoin(air_shp, zona_300, op = &#39;within&#39;) joined.head() . id geometry index_right OBJECTID CAT_Zonas_ Shape_Leng Shape_Area . 0 14714 | POINT (483717.1004987835 2148453.175128175) | 10 | 11 | Torre Mayor - Zona Rosa | 13824.706035 | 6.642480e+06 | . 1 22787 | POINT (482864.7321007056 2149605.865768956) | 10 | 11 | Torre Mayor - Zona Rosa | 13824.706035 | 6.642480e+06 | . 10 99972 | POINT (482815.5982493593 2149818.367295615) | 10 | 11 | Torre Mayor - Zona Rosa | 13824.706035 | 6.642480e+06 | . 16 180808 | POINT (482318.1542197064 2147782.822795313) | 10 | 11 | Torre Mayor - Zona Rosa | 13824.706035 | 6.642480e+06 | . 23 245507 | POINT (482083.0875080909 2147873.789923726) | 10 | 11 | Torre Mayor - Zona Rosa | 13824.706035 | 6.642480e+06 | . len(joined) . 9886 . fig, ax = plt.subplots(figsize=(20,17)) joined.plot(ax = ax, alpha = 0.1) . &lt;matplotlib.axes._subplots.AxesSubplot at 0x1a2f76f518&gt; . j_g = joined.groupby(&#39;CAT_Zonas_&#39;).count().reset_index() j_g_count = j_g[[&#39;CAT_Zonas_&#39;,&#39;id&#39;]] j_g_count = j_g_count.sort_values(&#39;id&#39;, ascending = False) j_g_count.loc[3, &#39;CAT_Zonas_&#39;]=&#39;Condesa-Roma&#39; . import random fig, ax = plt.subplots(figsize = (15, 10)) # Plot Bars barlist = ax.bar(j_g_count[&#39;CAT_Zonas_&#39;], j_g_count[&#39;id&#39;], color=&#39;teal&#39;, alpha = 0.5,width=.9) #barlist[22].set_color(&#39;r&#39;) #for i, val in enumerate(un_pob_cons[&#39;tas_consultorios&#39;].values): #plt.text(i, val-0.04, round(val, 2), horizontalalignment=&#39;center&#39;, verticalalignment=&#39;bottom&#39;, fontdict={&#39;fontweight&#39;:500,&#39;color&#39;:&#39;white&#39;, &#39;size&#39;:10}) # Decoration plt.gca().set_xticklabels(j_g_count[&#39;CAT_Zonas_&#39;], rotation=90, horizontalalignment= &#39;center&#39;) plt.title(&#39;Número de AirBnb por Zona Hotelera&#39;, fontsize=20) plt.ylabel(&#39;Número de AirBnb&#39;,fontsize=15) plt.xticks(fontsize = 15) #plt.ylim(0, 0.7) ax.spines[&quot;top&quot;].set_visible(False) ax.spines[&quot;right&quot;].set_visible(False) plt.savefig(&#39;/Users/daniel.rodriguez/Documents/Hoteles CDMX/GRAPH/airbnb.png&#39;, format = &#39;png&#39;, dpi = 300,bbox_inches = &quot;tight&quot;) plt.show() . Verificar por mes cuales hoteles o zonas est&#225;n por arriba o por debajo del promedio . hotel_mx1 = pd.read_csv(&#39;/Users/daniel.rodriguez/Documents/Hoteles CDMX/hotel_matrix.csv&#39;,sep = &#39;,&#39;, encoding = &#39;utf-8&#39;,header = 0, index_col =False) hotel_mx1.head() . RTCDMX NOMBRE_HOTEL CAT_Zonas_ ENERO FEBRERO MARZO ABRIL MAYO JUNIO JULIO AGOSTO SEPTIEMBRE OCTUBRE NOVIEMBRE DICIEMBRE . 0 6642 | Las Suites Polanco | Chapultepec-Polanco | 0 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | . 1 1158 | Hotel Mazatlan | Centro Historico-Alameda | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 0 | 1 | 1 | 1 | 0 | . 2 5181 | Holiday Inn &amp; Suites Mexico Medica Sur | Perisur-Ajusco | 0 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | . 3 5341 | Filadelfia Suites Hotel Boutique | W.T.C.-San Angel-C.U. | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 0 | . 4 6668 | City Express Patio Universidad | Coyoacan-Xoco-Atoyac | 0 | 1 | 0 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 0 | . hotel_mx1.set_index(&#39;NOMBRE_HOTEL&#39;, inplace = True) . hotel_mx2 = hotel_mx1[[&#39;ENERO&#39;, &#39;FEBRERO&#39;,&#39;MARZO&#39;,&#39;ABRIL&#39;,&#39;MAYO&#39;,&#39;JUNIO&#39;,&#39;JULIO&#39;,&#39;AGOSTO&#39;,&#39;SEPTIEMBRE&#39;,&#39;OCTUBRE&#39;,&#39;NOVIEMBRE&#39;,&#39;DICIEMBRE&#39;]] . hotel_mx3 = hotel_mx2[~hotel_mx2[&#39;ENERO&#39;]&lt;0] hotel_mx3[0:2] . p1_hotel_mx3 = hotel_mx3[0:32] p2_hotel_mx3 = hotel_mx3[32:65] p3_hotel_mx3 = hotel_mx3[65:98] . hotel_mx4 = hotel_mx1[~hotel_mx1[&#39;ENERO&#39;]&lt;0] e = list(hotel_mx4.CAT_Zonas_) len(e) . 98 . lista_pos1 = [0.6,1.6,2.6,3.6,4.6,5.6,6.6,7.6,8.6,9.6,10.6,11.6,12.6,13.6,14.6,15.6,16.6, 17.6,18.6,19.6,20.6,21.6,22.6,23.6,24.6,25.6,26.6,27.6,28.6,29.6,30.6,31.6] lista_pos2 = [0.6,1.6,2.6,3.6,4.6,5.6,6.6,7.6,8.6,9.6,10.6,11.6,12.6,13.6,14.6,15.6,16.6, 17.6,18.6,19.6,20.6,21.6,22.6,23.6,24.6,25.6,26.6,27.6,28.6,29.6,30.6,31.6, 32.6] . import seaborn as sns from matplotlib import cm from matplotlib.colors import ListedColormap, LinearSegmentedColormap fig = plt.figure(figsize=(5,10)) viridisBig = cm.get_cmap(&#39;viridis_r&#39;, 512) newcmp = ListedColormap(viridisBig(np.linspace(0.25, 0.75, 256))) ax = sns.heatmap(p1_hotel_mx3, cmap = newcmp, linewidths = .5, cbar=False, linecolor = &#39;black&#39;, ) for zona, pos in zip(e[0:32],lista_pos1): plt.text(12,pos, zona, fontsize=8) ax.set_title(&quot;Ocupación (%) de Hoteles por arriba o por debajo del promedio&quot;, fontsize = 15,pad = 30,color = &#39;gray&#39;) fig.savefig(&#39;/Users/daniel.rodriguez/Documents/Hoteles CDMX/GRAPH/matrix_mean1.png&#39;, format = &#39;png&#39;, dpi = 300, bbox_inches = &quot;tight&quot;) . import seaborn as sns fig = plt.figure(figsize=(5,10)) viridisBig = cm.get_cmap(&#39;viridis_r&#39;, 512) newcmp = ListedColormap(viridisBig(np.linspace(0.25, 0.75, 256))) ax = sns.heatmap(p2_hotel_mx3, cmap = newcmp, linewidths = .5, cbar=False, linecolor = &#39;black&#39;, ) for zona, pos in zip(e[32:65],lista_pos2): plt.text(12,pos, zona, fontsize=8) ax.set_title(&quot;Ocupación (%) de Hoteles por arriba o por debajo del promedio&quot;, pad = 30, fontsize = 15,color = &#39;gray&#39;) fig.savefig(&#39;/Users/daniel.rodriguez/Documents/Hoteles CDMX/GRAPH/matrix_mean2.png&#39;, format = &#39;png&#39;, dpi = 300, bbox_inches = &quot;tight&quot;) . import seaborn as sns fig = plt.figure(figsize=(5,10)) viridisBig = cm.get_cmap(&#39;viridis_r&#39;, 512) newcmp = ListedColormap(viridisBig(np.linspace(0.25, 0.75, 256))) ax = sns.heatmap(p3_hotel_mx3, cmap = newcmp, linewidths = .5, cbar=False, linecolor = &#39;black&#39;, ) for zona, pos in zip(e[65:98],lista_pos2): plt.text(12,pos, zona, fontsize=8) ax.set_title(&quot;Ocupación (%) de Hoteles por arriba o por debajo del promedio&quot;, pad = 30, fontsize = 15,color = &#39;gray&#39;) fig.savefig(&#39;/Users/daniel.rodriguez/Documents/Hoteles CDMX/GRAPH/matrix_mean3.png&#39;, format = &#39;png&#39;, dpi = 300, bbox_inches = &quot;tight&quot;) . import seaborn as sns fig = plt.figure(figsize=(5,20)) ax = sns.heatmap(hotel_mx2, cmap = &#39;viridis_r&#39;, linewidths = .5, #annot = True, #fmt = &quot;.0f&quot;, #annot_kws = {&#39;size&#39;:10}, cbar=False, linecolor = &#39;black&#39;, ) for zona, pos in zip(e,lista_y_pos): plt.text(12,pos, zona, fontsize=8) ax.set_title(&quot;Ocupación (%) de Hoteles por arriba o por debajo del promedio&quot;, fontsize = 15,pad = 5,color = &#39;gray&#39;) fig.savefig(&#39;/Users/daniel.rodriguez/Documents/Hoteles CDMX/GRAPH/matrix_meanall.png&#39;, format = &#39;png&#39;, dpi = 300, bbox_inches = &quot;tight&quot;) . concentrado1 = conce_bren[conce_bren[&#39;AÑO&#39;]==2018] concentrado1_g = concentrado1.groupby([&#39;CAT_Zonas_&#39;]).mean().reset_index() concentrado1_g = concentrado1_g[[&#39;CAT_Zonas_&#39;,&#39;PRC_OCUP&#39;]] . concentrado1_mensual = concentrado1.groupby([&#39;CAT_Zonas_&#39;,&#39;MES&#39;]).mean().reset_index() concentrado1_mensual = concentrado1_mensual[[&#39;CAT_Zonas_&#39;,&#39;MES&#39;,&#39;PRC_OCUP&#39;]] table_zona = pd.pivot_table(concentrado1_mensual, values = &#39;PRC_OCUP&#39;, index = [&#39;CAT_Zonas_&#39;], columns = [&#39;MES&#39;]).reset_index() table_zona = table_zona[[&#39;CAT_Zonas_&#39;,&#39;ENERO&#39;,&#39;FEBRERO&#39;,&#39;MARZO&#39;,&#39;ABRIL&#39;,&#39;MAYO&#39;,&#39;JUNIO&#39;,&#39;JULIO&#39;,&#39;AGOSTO&#39;,&#39;SEPTIEMBRE&#39;,&#39;OCTUBRE&#39;,&#39;NOVIEMBRE&#39;,&#39;DICIEMBRE&#39;]] . concentrado1_g = concentrado1_g.merge(table_zona[[&#39;CAT_Zonas_&#39;,&#39;ENERO&#39;,&#39;FEBRERO&#39;,&#39;MARZO&#39;,&#39;ABRIL&#39;,&#39;MAYO&#39;,&#39;JUNIO&#39;,&#39;JULIO&#39;,&#39;AGOSTO&#39;,&#39;SEPTIEMBRE&#39;,&#39;OCTUBRE&#39;,&#39;NOVIEMBRE&#39;,&#39;DICIEMBRE&#39;]], how = &#39;left&#39;) . columnas = [&#39;ENE&#39;,&#39;FEB&#39;,&#39;MAR&#39;,&#39;ABR&#39;,&#39;MAY&#39;,&#39;JUN&#39;,&#39;JUL&#39;,&#39;AGO&#39;,&#39;SEP&#39;,&#39;OCT&#39;,&#39;NOV&#39;,&#39;DIC&#39;] col_ = [&#39;ENERO&#39;,&#39;FEBRERO&#39;,&#39;MARZO&#39;,&#39;ABRIL&#39;,&#39;MAYO&#39;,&#39;JUNIO&#39;,&#39;JULIO&#39;,&#39;AGOSTO&#39;,&#39;SEPTIEMBRE&#39;, &#39;OCTUBRE&#39;,&#39;NOVIEMBRE&#39;,&#39;DICIEMBRE&#39;] for c, col in zip(columnas, col_): concentrado1_g[c] = np.where(concentrado1_g[col]&gt;concentrado1_g[&#39;PRC_OCUP&#39;], 1, 0) . concentrado2_g = concentrado1_g[[&#39;CAT_Zonas_&#39;,&#39;ENE&#39;,&#39;FEB&#39;,&#39;MAR&#39;,&#39;ABR&#39;,&#39;MAY&#39;,&#39;JUN&#39;,&#39;JUL&#39;,&#39;AGO&#39;,&#39;SEP&#39;,&#39;OCT&#39;,&#39;NOV&#39;,&#39;DIC&#39;]] concentrado2_g.set_index(&#39;CAT_Zonas_&#39;, inplace = True) concentrado2_g . ENE FEB MAR ABR MAY JUN JUL AGO SEP OCT NOV DIC . CAT_Zonas_ . Aeropuerto-Foro Sol 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 0 | . Centro Historico-Alameda 0 | 1 | 1 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 0 | . Chapultepec-Polanco 0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 1 | 1 | 1 | 0 | . Condesa-Roma 0 | 1 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | . Coyoacan-Xoco-Atoyac 0 | 1 | 0 | 1 | 1 | 0 | 1 | 1 | 1 | 1 | 1 | 0 | . Iztapalapa-Central de Abasto 0 | 1 | 1 | 1 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 0 | . Norte-Basilica de Guadalupe 0 | 1 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 1 | 0 | . Perisur-Ajusco 0 | 1 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 1 | 0 | . Santa Fe-Desierto de los Leones 0 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 1 | 1 | 0 | . Tlalpan-Taxquena 0 | 1 | 1 | 0 | 1 | 1 | 0 | 0 | 1 | 1 | 1 | 0 | . Torre Mayor-Zona Rosa 0 | 1 | 1 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 1 | 0 | . W.T.C.-San Angel-C.U. 0 | 1 | 0 | 1 | 1 | 1 | 0 | 1 | 0 | 1 | 1 | 0 | . import seaborn as sns from matplotlib import cm from matplotlib.colors import ListedColormap, LinearSegmentedColormap fig = plt.figure(figsize=(4,4)) viridisBig = cm.get_cmap(&#39;viridis_r&#39;, 512) newcmp = ListedColormap(viridisBig(np.linspace(0.25, 0.75, 256))) ax = sns.heatmap(concentrado2_g, cmap = newcmp, linewidths = .5, cbar=False, linecolor = &#39;black&#39;, ) #for zona, pos in zip(e[0:32],lista_pos1): #plt.text(12,pos, zona, fontsize=8) ax.set_title(&quot;Ocupación (%) de Zonas por arriba o por debajo del promedio&quot;, fontsize = 15,pad = 30,color = &#39;gray&#39;) fig.savefig(&#39;/Users/daniel.rodriguez/Documents/Hoteles CDMX/GRAPH/matrix_mean_zone.png&#39;, format = &#39;png&#39;, dpi = 300, bbox_inches = &quot;tight&quot;) .",
            "url": "https://daro05.github.io/blog/2020/12/26/2020-12-26-HOTEL_B.html",
            "relUrl": "/2020/12/26/2020-12-26-HOTEL_B.html",
            "date": " • Dec 26, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://daro05.github.io/blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://daro05.github.io/blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://daro05.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://daro05.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}